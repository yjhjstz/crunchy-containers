ARG PREFIX
ARG BASEVER
ARG PG_FULL

FROM ${PREFIX}/crunchy-base:centos7-${PG_FULL}-${BASEVER}
# ===== Early lines ordered for leveraging cache, reorder carefully =====
ARG PG_MAJOR

# Preserving PGVERSION out of paranoia
ENV PGROOT="/usr/pgsql-${PG_MAJOR}" PGVERSION="${PG_MAJOR}" BACKREST_VERSION="2.18"

ARG BACKREST_VER
ARG PGAUDIT_LBL


#ARG PGDG_REPO_RPM=https://download.postgresql.org/pub/repos/yum/${PG_MAJOR}/redhat/rhel-7-x86_64/pgdg-redhat-repo-42.0-6.noarch.rpm

ARG S3_REPO_RPM=https://postgres.s3.didiyunapi.com/postgres-server-13.1-1.el7.centos.x86_64.rpm

RUN yum -y install centos-release-scl llvm-toolset-7 llvm-toolset-7-llvm-devel.x86_64

# Separate yum run matching postgres-ha image, leverages cached layer
RUN yum -y install  perl perl-Time-HiRes perl-Digest-SHA perl-JSON-PP perl-ExtUtils-Embed \
	sudo openssl-devel libxml2-devel \
	openssh-clients \
	openssh-server \
	psmisc \
	rsync perf \
	&& yum -y clean all

# install postgres server local
RUN yum -y localinstall ${S3_REPO_RPM}

# ===== Steps unique to this image after here =====
LABEL name="postgres" \
	summary="PostgreSQL ${PG_FULL} (PGDG) on a Centos7 base image" \
	description="Allows multiple deployment methods for PostgreSQL, including basic single primary, streaming replication with synchronous and asynchronous replicas, and stateful sets. Includes utilities for Auditing (pgaudit), statement tracking, and Backup / Restore (pgbackrest, pg_basebackup)." \
	io.k8s.description="Crunchy PostgreSQL is the trusted open source distribution of PostgreSQL" \
	io.k8s.display-name="Crunchy PostgreSQL" \
	io.openshift.tags="postgresql,postgres,sql,nosql,database,crunchy"

# add path settings for postgres user
# bash_profile is loaded in login, but not with exec
# bashrc to set permissions in OCP when using exec
# HOME is / in OCP
ADD conf/.bash_profile /var/lib/pgsql/
ADD conf/.bashrc /var/lib/pgsql
ADD conf/.bash_profile /
ADD conf/.bashrc /

RUN mkdir -p /opt/cpm/bin /opt/cpm/conf /pgdata /pgwal /pgconf /recover /backrestrepo

RUN chown -R postgres:postgres /opt/cpm /var/lib/pgsql \
		/pgdata /pgwal /pgconf /recover /backrestrepo &&  \
	chmod -R g=u /opt/cpm /var/lib/pgsql \
		/pgdata /pgwal /pgconf /recover /backrestrepo

# open up the postgres port
EXPOSE 5432

ADD bin/postgres /opt/cpm/bin
ADD bin/common /opt/cpm/bin
ADD conf/postgres /opt/cpm/conf
ADD tools/pgmonitor/exporter/postgres /opt/cpm/bin/modules/pgexporter
# ADD conf/postgres/postgresql-pgdg-libs.conf /etc/ld.so.conf.d/
# RUN ldconfig

# add self build pgbackrest
ADD bin/postgres/pgbackrest /usr/bin/pgbackrest
ADD bin/postgres/pgbackrest-conf.patch /etc/pgbackrest.conf
RUN chmod 755 /usr/bin/pgbackrest && \
    chown postgres:postgres /etc/pgbackrest.conf && chmod 640 /etc/pgbackrest.conf && \ 
    mkdir -m 770 /var/log/pgbackrest && mkdir -m 770 /var/spool/pgbackrest && \
    chown postgres:postgres /var/log/pgbackrest  &&  chown postgres:postgres /var/spool/pgbackrest

RUN chmod g=u /etc/passwd && \
	chmod g=u /etc/group

RUN mkdir /.ssh && chown 26:0 /.ssh && chmod g+rwx /.ssh

# add volumes to allow override of pg_hba.conf and postgresql.conf
# add volumes to offer a restore feature
# add volumes to allow storage of postgres WAL segment files
# add volumes to locate WAL files to recover with
# add volumes for pgbackrest to write to
# The VOLUME directive must appear after all RUN directives to ensure the proper
# volume permissions are applied when building the image
VOLUME ["/sshd", "/pgconf", "/pgdata", "/pgwal", "/recover", "/backrestrepo"]

ENTRYPOINT ["/opt/cpm/bin/uid_postgres.sh"]

USER 26

CMD ["/opt/cpm/bin/start.sh"]
